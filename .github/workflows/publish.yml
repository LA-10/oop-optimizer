name: Python Package Publish ðŸ“¦

on:
  release:
    types: [published] # Trigger when a GitHub release is published
  workflow_dispatch:    # Allow manual triggering

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Python Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tools
        run: |
          python -m pip install --upgrade build

      - name: Build the package
        run: |
          python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI ðŸ§ª
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: testpypi
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist/

      - name: Publish package to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

  publish-to-pypi:
    name: Publish to PyPI ðŸš€
    runs-on: ubuntu-latest
    needs: publish-to-testpypi
    environment:
      name: pypi
      url: https://pypi.org/project/oopoa/
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist/

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python -m twine upload dist/*
